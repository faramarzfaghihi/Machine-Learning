import sklearn
from sklearn.decomposition import KernelPCA
from sklearn import datasets
import matplotlib.pyplot as plt

n_points = 2000
X, color = datasets.make_s_curve(n_points, random_state=0)


fig = plt.figure(figsize=(45, 25))
ax = fig.add_subplot(251, projection='3d')
ax.scatter(X[:, 0], X[:, 1], X[:, 2], c=color, cmap=plt.
cm.jet, s=9, lw=1)
ax.view_init(10, -72)

kpca= KernelPCA(n_components=2, kernel = 'rbf')
X_kpca= kpca.fit_transform(X)

fig = plt.figure(figsize=(5, 5))
ax = fig.add_subplot(1,1,1)
ax.scatter(X_kpca[:, 0], X_kpca[:, 1], c=color, cmap=plt.cm.jet, 
s=9, lw=1)


ax.axis('tight')
plt.ylabel('Y coordinate')
plt.xlabel('X coordinate')
plt.show()
